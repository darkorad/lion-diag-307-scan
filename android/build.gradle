

buildscript {
    
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        classpath 'com.google.gms:google-services:4.4.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.10"
    }
}

apply from: "variables.gradle"

allprojects {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url = "https://jitpack.io" }
    }
    
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:-deprecation"
        options.deprecation = false
        options.fork = true
        options.forkOptions.jvmArgs = ['-Xmx2g']
    }
    
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "17"
            freeCompilerArgs += [
                "-Xsuppress-deprecated-warnings",
                "-Xopt-in=kotlin.RequiresOptIn"
            ]
        }
    }
    
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            project.android {
                if (!project.android.hasProperty('buildToolsVersion')) {
                    buildToolsVersion = "34.0.0"
                }
                
                // Force JVM 17 compatibility for all Android projects
                compileOptions {
                    sourceCompatibility = JavaVersion.VERSION_17
                    targetCompatibility = JavaVersion.VERSION_17
                }
                
                // Force Kotlin JVM target to 17 for all projects
                project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
                    kotlinOptions {
                        jvmTarget = "17"
                    }
                }
                
                lint {
                    disable 'DeprecatedApi', 'GradleDependency'
                    abortOnError = false
                    warningsAsErrors = false
                    quiet = true
                }
            }
        }
    }
}

tasks.register('clean', Delete) {
    delete = rootProject.buildDir
}
